const kafka = require('./kafka.config');
const { sendMail } = require('../configs/mailer');

const consumer = kafka.consumer({ groupId: 'job-mail-group' });

const runConsumer = async () => {
  await consumer.connect();
  await consumer.subscribe({ topic: 'job-mail-topic', fromBeginning: false });

  console.log('üì• Consumer ƒëang l·∫Øng nghe topic job-mail-topic...');

  await consumer.run({
    eachMessage: async ({ topic, partition, message }) => {
      try {
        const user = JSON.parse(message.value.toString());

        if (!user.email || !Array.isArray(user.jobs) || user.jobs.length === 0) {
          console.warn('‚ö†Ô∏è D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá, b·ªè qua');
          return;
        }

        await sendMail(
          user.email,
          `C∆° h·ªôi vi·ªác l√†m ph√π h·ª£p d√†nh cho b·∫°n (${user.jobs.length} vi·ªác l√†m)`,
          'jobNotificationAggregate',
          { userName: user.userName, jobs: user.jobs }
        );

        console.log(`‚úÖ ƒê√£ g·ª≠i mail t·ªõi ${user.email}`);
      } catch (err) {
        console.error('‚ùå L·ªói x·ª≠ l√Ω message:', err);
      }
    },
  });
};

module.exports = runConsumer;
